#cloud-config
---
fqdn: ${tmpl_node}.${tmpl_domain}
hostname: ${tmpl_node}
manage_etc_hosts: false
manage_resolv_conf: false
create_hostname_file: true
prefer_fqdn_over_hostname: true
package_update: false
package_upgrade: false
apt: {preserve_sources_list: true}
ssh_keys:
  rsa_private: ${jsonencode(tmpl_rsakey)}
  rsa_public: ${
    jsonencode(file(format("%s/keys/host/%s.%s-id_rsa.pub",
                           pathexpand("~"), tmpl_node, tmpl_domain)))
  }
runcmd:
  - ${tmpl_is_knode ? tmpl_kubeadm : "/bin/true"}
write_files:
  - path: /etc/hosts
    owner: root:root
    permissions: '0644'
    content: ${jsonencode(file(pathexpand("~/crypt/hostfiles/hosts")))}

  %{~ if tmpl_is_knode ~}
  - path: ${tmpl_kubeattrs.admrc}
    owner: root:root
    permissions: '0644'
    content: |
      %{~ if tmpl_is_kctl ~}
      ---
      ${tmpl_kubeattrs.apiver}
      kind: InitConfiguration
      bootstrapTokens:
        - token: ${tmpl_kubeattrs.token}
          usages: [signing, authentication]
          groups: [system:bootstrappers:kubeadm:default-node-token]
          ttl: 0s
      skipPhases:
        - addon/kube-proxy  # we will go straight to cilium eBPF
      ---
      ${tmpl_kubeattrs.apiver}
      kind: ClusterConfiguration
      networking:
        podSubnet: ${format("10.%d.0.0/%d",
          split(".", tmpl_hostdata[tmpl_plexname])[2],
          tmpl_kubeattrs.mask
        )}
        serviceSubnet: ${format("10.%d.0.0/%d",
          split(".", tmpl_hostdata[tmpl_plexname])[2] + 1,
          tmpl_kubeattrs.mask
        )}

      %{~ else ~}
      ---
      ${tmpl_kubeattrs.apiver}
      kind: JoinConfiguration
      discovery:
        bootstrapToken:
          token: ${tmpl_kubeattrs.token}
          apiServerEndpoint: ${tmpl_plexname}1:6443
          unsafeSkipCAVerification: true
      %{~ endif ~}
  %{~ endif ~}
