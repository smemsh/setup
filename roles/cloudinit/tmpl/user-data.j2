#cloud-config
#
# initial bake-time user-data for cloud-init
#   {{ansible_managed}}
#
# - yaml format
# - cloud-init requires first line comment to identify its metaformat
# - we do just enough to get instance bootstrapped for 'config' user
# - thereafter, config layer takes over (in our case, ansible)
#
---

disable_ec2_metadata: {{
  (groups[locgroup_google] is defined and target in groups[locgroup_google])
  | ternary('false', 'true')
}}

write_files:

  # temporary to get cfmgmt bootstrapped; once cfmgmt runs, it will
  # replace the Port in main config file and this file should be removed
  #
  - path: /etc/ssh/sshd_config.d/00-smemsh-ssh-port.conf
    content: |
      port {{cloudinit_ssh_port}}

  # work around socket activation race where we cannot seem to properly
  # reconfigure for daemon-based listening if we don't at install-time
  #
  - path: /etc/systemd/system-preset/98-disable-ssh-socket.preset
    content: |
      disable ssh.socket
      enable ssh.service

  # we just inject /etc/hosts and /etc/resolv.conf ourselves since we
  # have all information we need and these are very simple to make.
  # remember also, these are only for bootstrap until ansible takes over
  # (after which we will disable cloud-init entirely)

  - path: /etc/hosts
    content: |
      127.0.0.1 localhost.localdomain localhost
      {{ip_address}} {{ip_fqdn}} {{vm_name}}
      {{ip_gateway}} {{cloudinit_cfmgmt_fqdn}} {{cloudinit_cfmgmt_host}}
{% if groups[locgroup_google] is defined
      and target in groups[locgroup_google] %}
      169.254.169.254 metadata.google.internal metadata
{% endif %}

  - path: /etc/resolv.conf
    content: |
      nameserver 8.8.8.8
      nameserver 8.8.4.4

apt:                      {preserve_sources_list: true}
package_update:           true
package_upgrade:          true
packages:
{% for pkg in cloudinit_packages %}
  - {{pkg}}
{% endfor %}

resize_rootfs:            true
disable_root:             false
preserve_hostname:        false
locale:                   '{{cloudinit_vm_locale}}'
timezone:                 '{{cloudinit_vm_timezone}}'

# we'll remove/replace this later in rsyslog role
rsyslog:                  {configs: [{content: "*.debug /var/log/messages"}]}

# - manage_resolv_conf does not work at all (module is not even
#   configured in the image's cloud.cfg, and if we do add it, there's
#   a python error)
# - manage_etc_hosts uses $hostname and the /etc/cloud/templates
#   version is broken if we make that an fqdn (adds .localdomain, also
#   makes 127.0.0.1 instead of real static ip), which we want it to be
#
prefer_fqdn_over_hostname: true
create_hostname_file:     true
manage_etc_hosts:         false
manage_resolv_conf:       false
hostname:                 '{{ip_referent}}'
fqdn:                     '{{ip_fqdn}}'

# note: these run every boot!
#bootcmd: []

###

users:

  - name:                 '{{cfmgmt_username}}'
    shell:                /bin/bash
    homedir:              '{{cfmgmt_homedir}}'
    plain_text_passwd:    '{{cfmgmt_password}}'
    lock_passwd:          false
    sudo:                 ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - "{{lookup('file', 'keys/ssh/' + cfmgmt_username + '-id_rsa.pub')}}"

runcmd:

  # remove skeleton kruft, too bad no way to disable it
  - rm -rf {{cfmgmt_homedir}}/.cache/
  - find {{cfmgmt_homedir}}/ -mindepth 1 -maxdepth 1 -type f -print0 |
    xargs -0 rm -f

  # eliminate dain bramaged vendor shell pollution
  - rm -f /etc/profile
  - rm -f /etc/bash.bashrc
  - rm -f /etc/bashrc
  - rm -f /etc/bash_profile
  - find /root/ -mindepth 1 -print0 | xargs -0 rm -rf

  # for spelunking prior to cfmgmt
  - echo "set editing-mode vi" > /root/.inputrc

  # want eni renderer/activator first, it is second only to netplan, which we
  # will remove.  this cannot be overridden in user-data sadly, but since we
  # have a two-stage image bake pipeline we can do it in the first stage and
  # the second stage will then use eni
  #
  - sed -i -e "s/'netplan',//"
    /etc/cloud/cloud.cfg

  # for some reason it ignores manage_etc_hosts in user-data, have found
  # no other way to disable this for second boot TODO
  #
  - sed -r -i -e "/^[[:space:]]+-[[:space:]]+update_etc_hosts$/d"
    /etc/cloud/cloud.cfg

  # we disabled socket activation in a preset, and the package install itself
  # will not start it on u24+ because it assumes socket activation is
  # configured, so we have to start it else cfmgmt cannot connect.  we are
  # currently within the cloudinit systemd unit, so if we block we'll end up
  # deadlocked, it has to start after cloudinit finishes, so we queue it
  #
  - systemctl --no-block start ssh.service

ssh_keys:

  # note: preserve indent offsets, since this is templated yaml
  #
  rsa_private: |
    {{lookup("file", "keys/host/" + ip_fqdn + "-id_rsa") |
      indent(4, false)}}

  rsa_public: |
    {{lookup("file", "keys/host/" + ip_fqdn + "-id_rsa.pub") |
      indent(4, false)}}

  # server will generate dsa and ecdsa hostkeys in init script, which we
  # don't care about, configured to only use rsa client-side)
  # TODO: make sure .ssh/config has this!

# EOF
