#
---


- name: invocation_check
  assert:
    that: [host is defined or (host_by_inventory and host_init)]
    quiet: true
    fail_msg: >
      set 'host' to impose the configuration of a different host on the
      target, or 'host_by_inventory' if the target should be configured
      as itself

- name: quell_systemd_networking_invasion_post14
  systemd:
    name: '{{item}}'
    masked: true
    enabled: false
  with_items:
    - systemd-networkd.service
    - systemd-networkd.socket
    - systemd-networkd-wait-online.service
    - systemd-resolved.service
  when:
    ansible_distribution_release in [
      'xenial', 'bionic', 'focal', 'jammy', 'noble'
    ]

- name: quell_systemd_networking_invasion_post16
  systemd:
    name: '{{item}}'
    masked: true
    enabled: false
  with_items:
    - networkd-dispatcher.service
  when:
    ansible_distribution_release in [
      'bionic', 'focal', 'jammy', 'noble'
    ]

- name: remove_cloud_init_persistent_net_rules
  file:
    name: '{{item}}'
    state: absent
  with_items:
    #- /etc/netplan/50-cloud-init.yaml # bionic (and trusty?)
    - /etc/netplan # we will boot again and redo cloudinit with eni renderer
    - /etc/udev/rules.d/70-persistent-net.rules # xenial
  when:
    ansible_distribution_release in [
      'xenial', 'bionic', 'focal', 'jammy', 'noble'
    ]

# setup won't have been run yet since 'host=' is the end target, not the
# initial one, but we might be applying this role onto hosts directly (eg via
# ansrole) and not via some other role
#
- name: set_host_if_by_inventory
  set_fact:
    host: '{{inventory_hostname}}'
  when: host_by_inventory and host is not defined

- name: load_inventory_variables
  add_host:
    host: '{{host}}'
  when: hostvars[host] is not defined

- name: hostname
  copy:
    content: "{{ip_fqdn}}\n"
    dest: /etc/hostname
    force: true

# isc-dhcp-client is the preferred one of ifupdown (first it will use
# with 'dhcp' keyword, if installed). if present hooks are run upon
# lease which set the system hostname and replace resolv.conf if
# systemd-resolved is not in use.  the hook scripts are sourced,
# and we will override the shell functions that do these things
#
# see also defaults.yml:host_do_resolver (cannot use because we have
# 'host' var indirection here)
#
- name: dhclient_hook_suppress
  when: host not in groups.noresolv
  block:

    - name: test_dhclient_installed
      stat:
        path: /etc/dhcp/dhclient-enter-hooks.d
      register: r

    - name: deposit_entry_hook_if_none
      when: r.stat.exists
      copy:
        content: |
          # ansible-managed: disable hook processing
          true; exit
        dest: '{{r.stat.path | splitext | first}}'
        owner: root
        group: root
        force: false
      register: r

- name: interfaces
  copy:
    content: source interfaces.d/*cloud-init.cfg
    dest: /etc/network/interfaces

  #template:
  #  group: root
  #  owner: root
  #  mode: '0644' # keep as string to avoid bugs
  #  src: tmpl/interfaces.j2
  #  dest: /etc/network/interfaces

- name: do_ssh_hostkeys
  when: host_do_ssh | bool
  block:

    # todo: did the dsa* and others already get removed or maybe
    # just never generated? since we only gave an rsa in cloud-init?
    #
    - name: hostkey_private
      copy:
        # file lookup works with vault in 2.3
        # preserve the trailing newline and indent
        # todo: plain src= knows about vault in ansible 2.4
        content: |
          {{(lookup('file', host_privkey))}}
        dest: /etc/ssh/ssh_host_rsa_key
        owner: root
        group: root
        mode: '0600' # keep as string to avoid bugs
      notify:
        - host_handler_sshd_reload

    - name: hostkey_public
      copy:
        src: '{{host_pubkey}}'
        dest: /etc/ssh/ssh_host_rsa_key.pub
        owner: root
        group: root
        mode: '0644' # keep as string to avoid bugs
      notify:
        - host_handler_sshd_reload
