#
# ansible-role-skel
#   setup home skeleton from git repositories following rcfile+exe convention
#
# desc:
#   - for applying to newly provisioned hosts to create smemsh user skeleton
#   - checkout repos from github at specified tag or latest tag matching prefix
#   - verify tag signatures
#   - each repository gets installx/installrc run
#
# what:
#   - symlinks for rcfiles: ~/.foorc -> ~/.foo/rc (see installrc)
#   - copies for exes: cp ~/srcx/sometool/exe ~/bin/sometool (see installx)
#   - (todo: choose paths according to what variables?)
#
# vars:
#   skel_sysadmin: whether to run sysadmin role and add to group
#   mkuser_user: account name to pass to mkuser role
#   initpgp_keyid: initpgp email
#   initssh_keyid: initssh email
#
# todo:
#   - skel_sysadmin still being used downstream?
#   - make installx importable to be usable as module when not __main__
#   - allow to bypass mkuser role if mkuser_user undefined (eg, not our host)
#   - likewise, able to run without acl package installed
#
---

- assert:
    that: mkuser_user is defined

- command: which setfacl
  register: r
  ignore_errors: true # we check it ourselves, and want to get that far
  changed_when: false

- name: check_acl_package_installed
  fail:
    msg: >
      needs 'setfacl' command available ('acl' package) on the target for
      'copy' or 'template' module to work when all three conditions met (1)
      become is used; (2) remote_user is not root; (3) become_user is not
      root.  in this case ansible uses 'setfacl' to allow the bundle to be
      deposited by one user and read by another
      ('allow_world_readable_tmpfiles' would also work, but we don't want to
      do that); see
      https://docs.ansible.com/ansible/latest/user_guide/become.html#becoming-an-unprivileged-user
  when: r.rc != 0

- command: which git
  register: r
  ignore_errors: true
  changed_when: false

- name: check_git_package_installed
  fail:
    msg: requires that 'git' is installed already on the remote system
  when: r.rc != 0

- include_role:
    name: sysadmin
    public: true
  when: skel_sysadmin | bool

- include_role:
    name: mkuser

- include_role:
    name: initpgp
    apply:
      become: true
      become_user: '{{mkuser_user}}'
  when: initpgp_keyid is defined

- include_role:
    name: initssh
    apply:
      become: true
      become_user: '{{mkuser_user}}'
  when: initssh_keyid is defined

- block:
  - import_tasks: gits.yml
  - import_tasks: installx.yml
  become: true
  become_user: '{{mkuser_user}}'
