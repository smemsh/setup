#
# ansible-role-skel
#   setup home skeleton from git repositories following rcfile+exe convention
#
# desc:
#   - for applying to newly provisioned hosts to create smemsh user skeleton
#   - checkout repos from github at specified tag or latest tag matching prefix
#   - verify tag signatures
#   - each repository gets installx/installrc run
#
# what:
#   - symlinks for rcfiles: ~/.foorc -> ~/.foo/rc (see installrc)
#   - copies for exes: cp ~/srcx/sometool/exe ~/bin/sometool (see installx)
#   - (todo: choose paths according to what variables?)
#
# vars:
#   skel_sysadmin: whether to run sysadmin role and add to group [true]
#   mkuser_user: account name to pass to mkuser role (always run) [scott]
#   initpgp_keyid: initpgp email (run if truthy+) [scott@smemsh.net]
#   initssh_keyid: initssh email (run if truthy+) [scott@omnius.smemsh.net]
#
# todo:
#   - skel_sysadmin still being used downstream?
#   - make installx importable to be usable as module when not __main__
#   - allow to bypass mkuser role if mkuser_user undefined (eg, not our host)
#   - likewise, able to run without acl package installed
#
---

- name: verify_user_arg_supplied
  assert:
    that: mkuser_user is defined
    quiet: true


# needs 'setfacl' command available ('acl' package) on the target
# for 'copy' or 'template' module to work when all three conditions
# met (1) become is used; (2) remote_user is not root; (3)
# become_user is not root.  in this case ansible uses 'setfacl' to
# allow the bundle to be deposited by one user and read by another
# ('allow_world_readable_tmpfiles' would also work, but we don't
# want to do that); see
# https://docs.ansible.com/ansible/latest/user_guide/become.html#becoming-an-unprivileged-user
#
- name: verify_setacl_invokable
  command: which setfacl
  changed_when: false

- name: verify_git_invokable
  command: which git
  changed_when: false


- include_role:
    name: sysadmin
    public: true
  when: skel_sysadmin | bool

- include_role:
    name: mkuser

- include_role:
    name: initpgp
    apply:
      become: true
      become_user: '{{mkuser_user}}'
  when: initpgp_keyid is truthy(convert_bool=true)

- include_role:
    name: initssh
    apply:
      become: true
      become_user: '{{mkuser_user}}'
  when: initssh_keyid is truthy(convert_bool=true)

- name: do_repository_setups
  block:
    - import_tasks: gits.yml
    - import_tasks: installx.yml
  become: true
  become_user: '{{mkuser_user}}'
