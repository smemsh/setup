#
# ansible-role-skel
#   setup home skeleton from git repositories following rcfile+exe convention
#
# desc:
#   - for applying to newly provisioned machines
#   - checks out repos from github at specified tag (todo: where?)
#   - verifies tag signatures
#   - each repository gets installx/installrc run (todo: where are vars files?)
#
# what:
#   - symlinks for rcfiles: ~/.foorc -> ~/.foo/rc (see installrc)
#   - copies for exes: cp ~/srcx/sometool/exe ~/bin/sometool (see installx)
#   - (todo: choose paths according to what variables?)
#
# vars:
#   skel_sysadmin: whether we require ansible-role-sysadmin
#
# todo:
#   - skel_sysadmin still being used downstream?
#   - we should replace installx with ansible so it's not a dependency
#   - (maybe by converting it to a plugin / module)
#
---

- assert:
    that: mkuser_user is defined

- command: which setfacl
  register: r
  ignore_errors: true # we check it ourselves, and want to get that far

- name: check_acl_package_installed
  fail:
    msg: >
      needs 'setfacl' command available ('acl' package) on the target for
      'copy' or 'template' module to work when all three conditions met (1)
      become is used; (2) remote_user is not root; (3) become_user is not
      root.  in this case ansible uses 'setfacl' to allow the bundle to be
      deposited by one user and read by another
      ('allow_world_readable_tmpfiles' would also work, but we don't want to
      do that); see
      https://docs.ansible.com/ansible/latest/user_guide/become.html#becoming-an-unprivileged-user
  when: r.rc | bool

- include_role:
    name: sysadmin
  when: skel_sysadmin | default() | bool()

- import_role:
    name: mkuser

- include_role:
    name: initpgp
    apply:
      become: true
      become_user: '{{mkuser_user}}'
  when: initpgp_keyid is defined

- include_role:
    name: initssh
    apply:
      become: true
      become_user: '{{mkuser_user}}'
  when: initssh_keyid is defined

- block:
  - import_tasks: gits.yml
  - import_tasks: installx.yml
  become: true
  become_user: '{{mkuser_user}}'
