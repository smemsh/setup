#
---
# master: nodename=verniplex1 kubemaster=verniplex1 plexhost=vernius
# slave: nodename=verniplex2 kubemaster=null plexhost=vernius

- name: wait_for_node_ready
  hosts: '{{nodename}}'
  vars_files:
    - vars/networks.yml
  vars:
    plexname: "{{kubemaster.name | regex_findall('^[^\\d]+') | first}}"
    kubeconfig: "{{lookup('env', 'HOME') + '/.kube/' + plexname + '.yml'}}"
    init_join_timeout: 120

    # n = third octet from the plex net's /22 base address
    # pod cidr = 10.(n).0.0/16
    # service cidr = 10.(n+1).0.0/16
    #plexnet: "{{nets_plex[plexname] |}}"
    #octet3: "{{(plexnet | split('.'))[2]}}"
    #podnet: "{{'10.' + octet3 + '.0.0/16'}}"
    #srvnet: "{{'10.' + (((octet3 | int) + 1) | string) + '.0.0/16'}}"

  tasks:
    # smaller number of simultaneous node spawns don't need this but 15 did
    #- name: wait_for_ssh
    #  wait_for:
    #    host: '{{kubemaster}}'
    #    port: '{{ssh_port}}'
    #    timeout: '{{ssh_open_timeout}}'
    #    search_regex: SSH
    #  delegate_to: '{{plexhost}}'

    # allow kubeadm init/join to finish
    - name: wait_for_cloudinit_completion
      command: timeout {{init_join_timeout}} cloud-init status --wait
      changed_when: false

    - name: copy_master_kubeconfig_to_controller
      synchronize:
        mode: pull
        perms: false
        dest: "{{kubeconfig}}"
        src: /etc/kubernetes/admin.conf
        use_ssh_args: true
      become: true
      when: kubemaster is not none

    # normally controlled nodes use ~config/venv/bin/python3, but
    # kubernetes installation tasks will run on the controller itself as
    # the setup user, needing extra python libraries installed from
    # requirements.txt.  so we directly specify the python interpreter
    # as the one that setup would execute by PATH lookup.  we could use
    # ~/bin/python3 as interpreter_python, but this has implications for
    # different remote_user and become_user situations, so we'll use a
    # lookup based on setup user PATH for the few cases we need this.
    #
    - name: determine_local_python3_interpreter
      command: which python3
      delegate_to: localhost
      failed_when: r.rc != 0 or 'python3' not in r.stdout
      changed_when: false
      register: r

    - name: set_ansible_python_interpreter_fact
      changed_when: false
      delegate_to: localhost
      delegate_facts: true
      set_fact:
        py3bin: "{{r.stdout}}"

    - name: kubemaster_tasks
      when: kubemaster is not none
      become: false
      delegate_to: localhost
      vars:
        ansible_python_interpreter: "{{hostvars.localhost.py3bin}}"
      block:

        # make symlinks to ~setup/.kube/*.yml work for setup group
        - name: make_kubeconfig_group_readwrite
          file:
            mode: '0660' # keep as string to avoid bugs
            path: "{{kubeconfig}}"
