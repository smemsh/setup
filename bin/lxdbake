#!/usr/bin/env bash
#
# lxdbake
#   make a base vm image after applying baketime cloudinit and cfmgmt
#
# desc:
#   - wraps ansible-playbook lxdbake.yml
#   - creates a temporary incus_instance.imgbake["<bakehost>"] resource
#   - applies standard roles and those from types/$2.yml
#   - uploads an incus_image via terraform var baketime=true
#   - replaces any existing image
#
# args:
#   - arg1: bakehost:bakenode (incus_remote_name:bake_node_name)
#   - arg2: types/arg2.yml (ie "adm")
#   - arg3: incus_image base to bake as <base>_<type> (ie "u22v")
#
# todo:
#   - currently only one image at a time can be baked
#
# scott@smemsh.net
# https://github.com/smemsh/setup/
# https://spdx.org/licenses/GPL-2.0
#

while [[ $1 == -* ]]
do cliopts+=("$1"); shift; done

imgspec=${1:?}
imgtype=${2:?}
imgbase=${3:?}

if ! [[ $imgspec =~ ^([^:]+):([^:]+)$ ]]
then echo "bad bakehost:bakenode syntax" >&2; false; exit; fi

imghost=${BASH_REMATCH[1]}
imgnode=${BASH_REMATCH[2]}
if ! [[ $imghost && $imgnode ]]
then echo "missing plex or node name" >&2; false; exit; fi

varfiles=(vars/*.yml)
for ((i = 0; i < ${#varfiles[@]}; i++)); do
	varfiles[i]="-e @${varfiles[i]}"; done

ansible-playbook "${cliopts[@]}" ${0##*/}.yml \
	--become \
	${varfiles[@]} \
	-e lxdbake_name=$imgnode \
	-e lxdbake_plex=$imghost \
	-e lxdbake_type=$imgtype \
	-e lxdbake_base=$imgbase \
	-e lxdbake_init=true \
;
